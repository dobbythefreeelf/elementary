diff -x .git -Naur geary/src/client/application/geary-controller.vala geary-elementary/src/client/application/geary-controller.vala
--- geary/src/client/application/geary-controller.vala	2015-08-24 13:39:37.555687763 +0200
+++ geary-elementary/src/client/application/geary-controller.vala	2015-08-24 13:37:36.312903872 +0200
@@ -211,7 +211,7 @@
         main_window.folder_list.move_conversation.connect(on_move_conversation);
         main_window.main_toolbar.copy_folder_menu.folder_selected.connect(on_copy_conversation);
         main_window.main_toolbar.move_folder_menu.folder_selected.connect(on_move_conversation);
-        main_window.search_bar.search_text_changed.connect(on_search_text_changed);
+        main_window.main_toolbar.search_text_changed.connect(on_search_text_changed);
         main_window.conversation_viewer.link_selected.connect(on_link_selected);
         main_window.conversation_viewer.reply_to_message.connect(on_reply_to_message);
         main_window.conversation_viewer.reply_all_message.connect(on_reply_all_message);
@@ -280,7 +280,7 @@
         main_window.folder_list.move_conversation.disconnect(on_move_conversation);
         main_window.main_toolbar.copy_folder_menu.folder_selected.disconnect(on_copy_conversation);
         main_window.main_toolbar.move_folder_menu.folder_selected.disconnect(on_move_conversation);
-        main_window.search_bar.search_text_changed.disconnect(on_search_text_changed);
+        main_window.main_toolbar.search_text_changed.disconnect(on_search_text_changed);
         main_window.conversation_viewer.link_selected.disconnect(on_link_selected);
         main_window.conversation_viewer.reply_to_message.disconnect(on_reply_to_message);
         main_window.conversation_viewer.reply_all_message.disconnect(on_reply_all_message);
@@ -2261,6 +2261,7 @@
         debug(@"Creating composer of type $(widget.compose_type); $(composer_widgets.size) composers total");
         widget.destroy.connect(on_composer_widget_destroy);
         
+        inline = false;
         if (inline) {
             if (widget.state == ComposerWidget.ComposerState.NEW ||
                 widget.state == ComposerWidget.ComposerState.PANED)
@@ -2839,7 +2840,7 @@
     private bool on_search_timeout() {
         search_timeout_id = 0;
         
-        do_search(main_window.search_bar.search_text);
+        do_search(main_window.main_toolbar.search_text);
         
         return false;
     }
diff -x .git -Naur geary/src/client/components/main-toolbar.vala geary-elementary/src/client/components/main-toolbar.vala
--- geary/src/client/components/main-toolbar.vala	2015-08-24 13:39:37.556687760 +0200
+++ geary-elementary/src/client/components/main-toolbar.vala	2015-08-24 13:37:36.312903872 +0200
@@ -5,54 +5,32 @@
  */
 
 // Draws the main toolbar.
-public class MainToolbar : Gtk.Box {
+public class MainToolbar : PillHeaderbar {
+    public signal void search_text_changed(string search_text);
+    
     public FolderMenu copy_folder_menu { get; private set; default = new FolderMenu(); }
     public FolderMenu move_folder_menu { get; private set; default = new FolderMenu(); }
     public string account { get; set; }
     public string folder { get; set; }
-    public bool show_close_button { get; set; default = false; }
-    public bool show_close_button_left { get; private set; default = true; }
-    public bool show_close_button_right { get; private set; default = true; }
     public bool search_open { get; set; default = false; }
     public int left_pane_width { get; set; }
+    public string search_text { get { return search_entry.text; } }
+    public bool search_entry_has_focus { get { return search_entry.has_focus; } }
     
-    private PillHeaderbar folder_header;
-    private PillHeaderbar conversation_header;
     private Gtk.Button archive_button;
     private Gtk.Button trash_delete_button;
-    private Binding guest_header_binding;
+    private Gtk.SearchEntry search_entry = new Gtk.SearchEntry();
+    private Geary.ProgressMonitor? search_upgrade_progress_monitor = null;
+    private Geary.Account? current_account = null;
     
     public MainToolbar() {
-        Object(orientation: Gtk.Orientation.HORIZONTAL, spacing: 0);
-        
-        folder_header = new PillHeaderbar(GearyApplication.instance.actions);
-        conversation_header = new PillHeaderbar(GearyApplication.instance.actions);
-        folder_header.get_style_context().add_class("titlebar");
-        folder_header.get_style_context().add_class("geary-titlebar-left");
-        conversation_header.get_style_context().add_class("titlebar");
-        conversation_header.get_style_context().add_class("geary-titlebar-right");
-        
-        // Instead of putting a separator between the two headerbars, as other applications do,
-        // we put a separator at the right end of the left headerbar.  This greatly improves
-        // the appearance under the Ambiance theme (see bug #746171).  To get this separator to
-        // line up with the handle of the pane, we need to extend the width of the left-hand
-        // headerbar a bit.  Six pixels is right both for Adwaita and Ambiance.
-        GearyApplication.instance.config.bind(Configuration.MESSAGES_PANE_POSITION_KEY,
-            this, "left-pane-width", SettingsBindFlags.GET);
-        this.bind_property("left-pane-width", folder_header, "width-request",
-            BindingFlags.SYNC_CREATE, (binding, source_value, ref target_value) => {
-                target_value = left_pane_width + 6;
-                return true;
-            });
+        base(GearyApplication.instance.actions);
+        GearyApplication.instance.controller.account_selected.connect(on_account_changed);
         
         if (!GearyApplication.instance.is_running_unity) {
-            this.bind_property("account", folder_header, "title", BindingFlags.SYNC_CREATE);
-            this.bind_property("folder", folder_header, "subtitle", BindingFlags.SYNC_CREATE);
+            this.bind_property("account", this, "title", BindingFlags.SYNC_CREATE);
+            this.bind_property("folder", this, "subtitle", BindingFlags.SYNC_CREATE);
         }
-        this.bind_property("show-close-button-left", folder_header, "show-close-button",
-            BindingFlags.SYNC_CREATE);
-        this.bind_property("show-close-button-right", conversation_header, "show-close-button",
-            BindingFlags.SYNC_CREATE);
         
         bool rtl = get_direction() == Gtk.TextDirection.RTL;
         
@@ -61,154 +39,194 @@
         Gtk.Menu mark_menu = (Gtk.Menu) GearyApplication.instance.ui_manager.get_widget("/ui/ToolbarMarkMenu");
         mark_menu.foreach(GtkUtil.show_menuitem_accel_labels);
         
+        // Setup the application menu.
+        GearyApplication.instance.load_ui_file("toolbar_menu.ui");
+        Gtk.Menu application_menu = (Gtk.Menu) GearyApplication.instance.ui_manager.get_widget("/ui/ToolbarMenu");
+        application_menu.foreach(GtkUtil.show_menuitem_accel_labels);
+        
         // Toolbar setup.
         Gee.List<Gtk.Button> insert = new Gee.ArrayList<Gtk.Button>();
         
         // Compose.
-        insert.add(folder_header.create_toolbar_button("text-editor-symbolic",
+        insert.add(create_toolbar_button("mail-message-new",
             GearyController.ACTION_NEW_MESSAGE));
-        folder_header.add_start(folder_header.create_pill_buttons(insert, false));
-        
-        // Assemble the empty menu
-        GearyApplication.instance.load_ui_file("toolbar_empty_menu.ui");
-        Gtk.Menu empty_menu = (Gtk.Menu) GearyApplication.instance.ui_manager.get_widget("/ui/ToolbarEmptyMenu");
-        empty_menu.foreach(GtkUtil.show_menuitem_accel_labels);
-        insert.clear();
-        insert.add(folder_header.create_menu_button(null, empty_menu,
-            GearyController.ACTION_EMPTY_MENU));
-        Gtk.Box empty = folder_header.create_pill_buttons(insert, false);
-        
-        // Search
-        insert.clear();
-        Gtk.Button search_button = folder_header.create_toggle_button(
-            "preferences-system-search-symbolic", GearyController.ACTION_TOGGLE_SEARCH);
-        this.bind_property("search-open", search_button, "active",
-            BindingFlags.SYNC_CREATE | BindingFlags.BIDIRECTIONAL);
-        insert.add(search_button);
-        Gtk.Box search = folder_header.create_pill_buttons(insert, false);
-        
-#if !GTK_3_12
-        folder_header.add_end(empty);
-        folder_header.add_end(search);
-        folder_header.add_end(new Gtk.Separator(Gtk.Orientation.VERTICAL));
-#else
-        folder_header.add_end(new Gtk.Separator(Gtk.Orientation.VERTICAL));
-        folder_header.add_end(search);
-        folder_header.add_end(empty);
-#endif
+        add_start(create_pill_buttons(insert, false));
         
         // Reply buttons
         insert.clear();
-        insert.add(conversation_header.create_toolbar_button(rtl ? "mail-reply-sender-rtl-symbolic"
-            : "mail-reply-sender-symbolic", GearyController.ACTION_REPLY_TO_MESSAGE));
-        insert.add(conversation_header.create_toolbar_button(rtl ? "mail-reply-all-rtl-symbolic"
-            : "mail-reply-all-symbolic", GearyController.ACTION_REPLY_ALL_MESSAGE));
-        insert.add(conversation_header.create_toolbar_button(rtl ? "mail-forward-rtl-symbolic"
-            : "mail-forward-symbolic", GearyController.ACTION_FORWARD_MESSAGE));
-        conversation_header.add_start(conversation_header.create_pill_buttons(insert));
+        insert.add(create_toolbar_button(rtl ? "mail-reply-sender-rtl"
+                    : "mail-reply-sender", GearyController.ACTION_REPLY_TO_MESSAGE));
+        insert.add(create_toolbar_button(rtl ? "mail-reply-all-rtl"
+                    : "mail-reply-all", GearyController.ACTION_REPLY_ALL_MESSAGE));
+        insert.add(create_toolbar_button(rtl ? "mail-forward-rtl"
+                    : "mail-forward", GearyController.ACTION_FORWARD_MESSAGE));
+        add_start(create_pill_buttons(insert));
         
         // Mark, copy, move.
         insert.clear();
-        insert.add(conversation_header.create_menu_button("marker-symbolic", mark_menu,
+        insert.add(create_menu_button("edit-mark", mark_menu,
             GearyController.ACTION_MARK_AS_MENU));
-        insert.add(conversation_header.create_menu_button(rtl ? "tag-rtl-symbolic" : "tag-symbolic",
+        insert.add(create_menu_button(rtl ? "tag-rtl-symbolic" : "tag-new",
             copy_folder_menu, GearyController.ACTION_COPY_MENU));
-        insert.add(conversation_header.create_menu_button("folder-symbolic", move_folder_menu,
+        insert.add(create_menu_button("mail-move", move_folder_menu,
             GearyController.ACTION_MOVE_MENU));
-        conversation_header.add_start(conversation_header.create_pill_buttons(insert));
+        add_start(create_pill_buttons(insert));
         
+        // The toolbar looks bad when you hide one of a pair of pill buttons.
+        // Unfortunately, this means we have to have one pair for archive/trash
+        // and one single button for just trash, for when the archive button is
+        // hidden.
         insert.clear();
-        insert.add(archive_button = conversation_header.create_toolbar_button(null, GearyController.ACTION_ARCHIVE_MESSAGE, true));
-        insert.add(trash_delete_button = conversation_header.create_toolbar_button(null, GearyController.ACTION_TRASH_MESSAGE, false));
-        Gtk.Box archive_trash_delete = conversation_header.create_pill_buttons(insert);
-        
+        insert.add(archive_button = create_toolbar_button("mail-archive", GearyController.ACTION_ARCHIVE_MESSAGE, true));
+        insert.add(trash_delete_button = create_toolbar_button("user-trash", GearyController.ACTION_TRASH_MESSAGE, false));
+
+        // Add a vertical separator before adding the archive and trash buttons
+        var spacer = new Gtk.Separator(Gtk.Orientation.VERTICAL);
+        add_start(spacer);
+        add_start(archive_button);
+        add_start(trash_delete_button);
+
+        // Search bar.
+        search_entry.width_chars = 28;
+        search_entry.tooltip_text = _("Search all mail in account for keywords (Ctrl+S)");
+        search_entry.changed.connect(on_search_entry_changed);
+        search_entry.key_press_event.connect(on_search_key_press);
+        on_search_entry_changed(); // set initial state
+        search_entry.has_focus = true;
+
+        insert.clear();
+        insert.add(create_menu_button("open-menu", application_menu, GearyController.ACTION_GEAR_MENU));
+        add_end(create_pill_buttons(insert));
+
+        add_end(search_entry);
+
+        set_search_placeholder_text(_("Search"));
+
         insert.clear();
-        insert.add(conversation_header.create_toolbar_button(null, GearyController.ACTION_UNDO,
-            false));
-        Gtk.Box undo = conversation_header.create_pill_buttons(insert);
-        
-        // pack_end() ordering is reversed in GtkHeaderBar in 3.12 and above
-#if !GTK_3_12
-        conversation_header.add_end(archive_trash_delete);
-        conversation_header.add_end(undo);
-#endif
-        // Application button.  If we exported an app menu, we don't need this.
-        if (!Gtk.Settings.get_default().gtk_shell_shows_app_menu) {
-            insert.clear();
-            Gtk.Menu application_menu = new Gtk.Menu.from_model(
-                GearyApplication.instance.controller.app_menu);
-            insert.add(conversation_header.create_menu_button("emblem-system-symbolic",
-                application_menu, GearyController.ACTION_GEAR_MENU));
-            conversation_header.add_end(conversation_header.create_pill_buttons(insert));
+        insert.add(create_toolbar_button("edit-undo", GearyController.ACTION_UNDO, false));
+        add_end(create_pill_buttons(insert));
+    }
+
+    private void show_archive_button(bool show) {
+        if (show) {
+            archive_button.show();
+            trash_delete_button.hide();
+        } else {
+            archive_button.hide();
+            trash_delete_button.show();
         }
-#if GTK_3_12
-        conversation_header.add_end(undo);
-        conversation_header.add_end(archive_trash_delete);
-#endif
-        
-        pack_start(folder_header, false, false);
-        pack_start(conversation_header, true, true);
-        
-#if GTK_3_12
-        Gtk.Settings.get_default().notify["gtk-decoration-layout"].connect(set_window_buttons);
-        realize.connect(set_window_buttons);
-#else
-        get_style_context().changed.connect(set_close_buttons_side);
-        realize.connect(set_close_buttons_side);
-#endif
     }
     
     /// Updates the trash button as trash or delete, and shows or hides the archive button.
-    public void update_trash_archive_buttons(bool trash, bool archive) {
+    public void update_trash_buttons(bool trash, bool archive) {
+
         string action_name = (trash ? GearyController.ACTION_TRASH_MESSAGE
             : GearyController.ACTION_DELETE_MESSAGE);
-        conversation_header.setup_button(trash_delete_button, null, action_name, false);
-        
-        archive_button.visible = archive;
+
+        setup_button(trash_delete_button, "user-trash", action_name, true);
+
+        show_archive_button(archive);
+
     }
-    
-    public void set_conversation_header(Gtk.HeaderBar header) {
-        conversation_header.hide();
-        header.get_style_context().add_class("titlebar");
-        header.get_style_context().add_class("geary-titlebar-right");
-        guest_header_binding = bind_property("show-close-button-right", header,
-            "show-close-button", BindingFlags.SYNC_CREATE);
-        pack_start(header, true, true);
-#if GTK_3_12
-        header.decoration_layout = conversation_header.decoration_layout;
-#endif
+
+    public void set_search_text(string text) {
+        search_entry.text = text;
     }
-    
-    public void remove_conversation_header(Gtk.HeaderBar header) {
-        remove(header);
-        header.get_style_context().remove_class("titlebar");
-        header.get_style_context().remove_class("geary-titlebar-right");
-        GtkUtil.unbind(guest_header_binding);
-        header.show_close_button = false;
-#if GTK_3_12
-        header.decoration_layout = Gtk.Settings.get_default().gtk_decoration_layout;
-#endif
-        conversation_header.show();
+
+    public void give_search_focus() {
+        search_entry.grab_focus();
     }
-    
-#if GTK_3_12
-    private void set_window_buttons() {
-        string[] buttons = Gtk.Settings.get_default().gtk_decoration_layout.split(":");
-        if (buttons.length != 2) {
-            warning("gtk_decoration_layout in unexpected format");
-            return;
+
+    public void set_search_placeholder_text(string placeholder) {
+        search_entry.placeholder_text = placeholder;
+    }
+
+    private void on_search_entry_changed() {
+        search_text_changed(search_entry.text);
+        // Enable/disable clear button.
+        search_entry.secondary_icon_name = search_entry.text != "" ?
+            (get_direction() == Gtk.TextDirection.RTL ? "edit-clear-rtl" : "edit-clear") : null;
+    }
+
+    private bool on_search_key_press(Gdk.EventKey event) {
+        // Clear box if user hits escape.
+        if (Gdk.keyval_name(event.keyval) == "Escape")
+            search_entry.text = "";
+
+        // Force search if user hits enter.
+        if (Gdk.keyval_name(event.keyval) == "Return")
+            on_search_entry_changed();
+
+        return false;
+    }
+
+    private void on_search_upgrade_start() {
+        set_search_placeholder_text(_("Indexing…"));
+        search_entry.sensitive = false;
+        search_entry.set_progress_fraction(0.0);
+
+    }
+
+    private void on_search_upgrade_finished() {
+        set_search_placeholder_text(current_account == null ||
+            GearyApplication.instance.controller.get_num_accounts() == 1 ? _("Search") :
+            _("Search %s account").printf(current_account.information.nickname));
+        search_entry.sensitive = true;
+        search_entry.set_progress_fraction(0.0);
+
+    }
+
+    private void on_search_monitor_update(double total_progress, double change, Geary.ProgressMonitor monitor) {
+        search_entry.set_progress_fraction(total_progress);
+    }
+
+    private void on_account_changed(Geary.Account? account) {
+        on_search_upgrade_finished(); // Reset search box.
+
+        if (search_upgrade_progress_monitor != null) {
+            search_upgrade_progress_monitor.start.disconnect(on_search_upgrade_start);
+            search_upgrade_progress_monitor.update.disconnect(on_search_monitor_update);
+            search_upgrade_progress_monitor.finish.disconnect(on_search_upgrade_finished);
+            search_upgrade_progress_monitor = null;
+        }
+
+        if (current_account != null) {
+            current_account.information.notify[Geary.AccountInformation.PROP_NICKNAME].disconnect(
+                on_nickname_changed);
         }
-        show_close_button_left = show_close_button;
-        show_close_button_right = show_close_button;
-        folder_header.decoration_layout = buttons[0] + ":";
-        conversation_header.decoration_layout = ":" + buttons[1];
-    }
-#else
-    private void set_close_buttons_side() {
-        bool at_end = folder_header.close_button_at_end();
-        show_close_button_left = show_close_button && !at_end;
-        show_close_button_right = show_close_button && at_end;
+
+        if (account != null) {
+            search_upgrade_progress_monitor = account.search_upgrade_monitor;
+
+            search_upgrade_progress_monitor.start.connect(on_search_upgrade_start);
+            search_upgrade_progress_monitor.update.connect(on_search_monitor_update);
+            search_upgrade_progress_monitor.finish.connect(on_search_upgrade_finished);
+            if (search_upgrade_progress_monitor.is_in_progress)
+                on_search_upgrade_start(); // Remove search box, we're already in progress.
+
+            account.information.notify[Geary.AccountInformation.PROP_NICKNAME].connect(
+                on_nickname_changed);
+        }
+
+        current_account = account;
+
+        on_nickname_changed(); // Set new account name.
+    }
+
+    private void on_nickname_changed() {
+        set_search_placeholder_text(current_account == null ||
+            GearyApplication.instance.controller.get_num_accounts() == 1 ? _("Search") :
+            _("Search %s account").printf(current_account.information.nickname));
+    }
+
+
+    /// Updates the trash button as trash or delete, and shows or hides the archive button.
+    public void update_trash_archive_buttons(bool trash, bool archive) {
+        string action_name = (trash ? GearyController.ACTION_TRASH_MESSAGE
+            : GearyController.ACTION_DELETE_MESSAGE);
+        setup_button(trash_delete_button, "user-trash", action_name, false);
+
+        archive_button.visible = archive;
     }
-#endif
 }
 
diff -x .git -Naur geary/src/client/components/main-window.vala geary-elementary/src/client/components/main-window.vala
--- geary/src/client/components/main-window.vala	2015-08-24 13:39:37.556687760 +0200
+++ geary-elementary/src/client/components/main-window.vala	2015-08-24 13:37:36.312903872 +0200
@@ -107,6 +107,8 @@
         set_styling();
         create_layout();
         on_change_orientation();
+
+        conversation_list_view.get_style_context().add_class("conversation-list-view");
     }
     
     public override void show_all() {
@@ -192,6 +194,14 @@
             .geary-titlebar-left:dir(rtl) {
                 border-top-left-radius: 0px;
             }
+            .conversation-list-view {
+            	background-color: #FFF;
+                color: @text_color;
+            }
+            .conversation-list-view:selected {
+            	background-color: @selected_bg_color;
+            	color: @selected_fg_color;
+            }
         """;
         
         if(Gtk.MAJOR_VERSION > 3 || Gtk.MAJOR_VERSION == 3 && Gtk.MINOR_VERSION >= 14) {
diff -x .git -Naur geary/src/client/components/pill-toolbar.vala geary-elementary/src/client/components/pill-toolbar.vala
--- geary/src/client/components/pill-toolbar.vala	2015-08-24 13:39:37.557687758 +0200
+++ geary-elementary/src/client/components/pill-toolbar.vala	2015-08-24 13:37:36.312903872 +0200
@@ -47,11 +47,8 @@
         if (icon_to_load == null)
             icon_to_load = b.related_action.stock_id;
         
-        // set pixel size to force GTK+ to load our images from our installed directory, not the theme
-        // directory
         if (icon_to_load != null) {
-            Gtk.Image image = new Gtk.Image.from_icon_name(icon_to_load, Gtk.IconSize.MENU);
-            image.set_pixel_size(16);
+            Gtk.Image image = new Gtk.Image.from_icon_name(icon_to_load, Gtk.IconSize.LARGE_TOOLBAR);
             b.image = image;
         }
         
@@ -70,7 +67,7 @@
      */
     public virtual Gtk.Button create_toolbar_button(string? icon_name, string action_name, bool show_label = false) {
         Gtk.Button b = new Gtk.Button();
-        setup_button(b, icon_name, action_name, show_label);
+        setup_button(b, icon_name, action_name);
         
         return b;
     }
diff -x .git -Naur geary/src/client/composer/composer-box.vala geary-elementary/src/client/composer/composer-box.vala
--- geary/src/client/composer/composer-box.vala	2015-08-24 13:39:37.562687747 +0200
+++ geary-elementary/src/client/composer/composer-box.vala	2015-08-24 13:37:36.312903872 +0200
@@ -29,8 +29,6 @@
             conversation_list_view.get_selection().unselect_all();
             
             composer.free_header();
-            GearyApplication.instance.controller.main_window.main_toolbar.set_conversation_header(
-                composer.header);
             get_style_context().add_class("full-pane");
         }
     }
@@ -71,9 +69,6 @@
     public void vanish() {
         hide();
         parent.hide();
-        if (get_style_context().has_class("full-pane"))
-            GearyApplication.instance.controller.main_window.main_toolbar.remove_conversation_header(
-                composer.header);
         
         composer.state = ComposerWidget.ComposerState.DETACHED;
         composer.editor.focus_in_event.disconnect(on_focus_in);
diff -x .git -Naur geary/src/client/composer/composer-toolbar.vala geary-elementary/src/client/composer/composer-toolbar.vala
--- geary/src/client/composer/composer-toolbar.vala	2015-08-24 13:39:37.562687747 +0200
+++ geary-elementary/src/client/composer/composer-toolbar.vala	2015-08-24 13:37:36.313903870 +0200
@@ -14,31 +14,31 @@
         Gee.List<Gtk.Button> insert = new Gee.ArrayList<Gtk.Button>();
         
         // Font formatting.
-        insert.add(create_toggle_button(null, ComposerWidget.ACTION_BOLD));
-        insert.add(create_toggle_button(null, ComposerWidget.ACTION_ITALIC));
-        insert.add(create_toggle_button(null, ComposerWidget.ACTION_UNDERLINE));
-        insert.add(create_toggle_button(null, ComposerWidget.ACTION_STRIKETHROUGH));
+        insert.add(create_toggle_button("format-text-bold", ComposerWidget.ACTION_BOLD));
+        insert.add(create_toggle_button("format-text-italic", ComposerWidget.ACTION_ITALIC));
+        insert.add(create_toggle_button("format-text-underline", ComposerWidget.ACTION_UNDERLINE));
+        insert.add(create_toggle_button("format-text-strikethrough", ComposerWidget.ACTION_STRIKETHROUGH));
         add_start(create_pill_buttons(insert, false, true));
         
         // Indent level.
         insert.clear();
-        insert.add(create_toolbar_button(null, ComposerWidget.ACTION_INDENT));
-        insert.add(create_toolbar_button(null, ComposerWidget.ACTION_OUTDENT));
+        insert.add(create_toolbar_button("format-indent-more", ComposerWidget.ACTION_INDENT));
+        insert.add(create_toolbar_button("format-indent-less", ComposerWidget.ACTION_OUTDENT));
         add_start(create_pill_buttons(insert, false));
         
         // Link.
         insert.clear();
-        insert.add(create_toolbar_button(null, ComposerWidget.ACTION_INSERT_LINK));
+        insert.add(create_toolbar_button("insert-link", ComposerWidget.ACTION_INSERT_LINK));
         add_start(create_pill_buttons(insert));
         
         // Remove formatting.
         insert.clear();
-        insert.add(create_toolbar_button(null, ComposerWidget.ACTION_REMOVE_FORMAT));
+        insert.add(create_toolbar_button("edit-clear", ComposerWidget.ACTION_REMOVE_FORMAT));
         add_start(create_pill_buttons(insert));
         
         // Menu.
         insert.clear();
-        insert.add(create_menu_button(null, menu, ComposerWidget.ACTION_MENU));
+        insert.add(create_menu_button("open-menu", menu, ComposerWidget.ACTION_MENU));
         add_end(create_pill_buttons(insert));
         
         Gtk.Label label = new Gtk.Label(null);
diff -x .git -Naur geary/src/client/conversation-list/formatted-conversation-data.vala geary-elementary/src/client/conversation-list/formatted-conversation-data.vala
--- geary/src/client/conversation-list/formatted-conversation-data.vala	2015-08-24 13:39:37.564687743 +0200
+++ geary-elementary/src/client/conversation-list/formatted-conversation-data.vala	2015-08-24 13:37:36.313903870 +0200
@@ -290,15 +290,6 @@
             y += ink_rect.height + ink_rect.y + LINE_SPACING;
         }
         
-        // Draw separator line.
-        if (ctx != null && cell_area != null) {
-            ctx.set_line_width(1.0);
-            GtkUtil.set_source_color_from_string(ctx, CountBadge.UNREAD_BG_COLOR);
-            ctx.move_to(cell_area.x - 1, cell_area.y + cell_area.height);
-            ctx.line_to(cell_area.x + cell_area.width + 1, cell_area.y + cell_area.height);
-            ctx.stroke();
-        }
-        
         if (recalc_dims) {
             FormattedConversationData.preview_height = preview_height;
             FormattedConversationData.cell_height = y + preview_height;
diff -x .git -Naur geary/src/client/conversation-viewer/conversation-viewer.vala geary-elementary/src/client/conversation-viewer/conversation-viewer.vala
--- geary/src/client/conversation-viewer/conversation-viewer.vala	2015-08-24 13:39:37.565687740 +0200
+++ geary-elementary/src/client/conversation-viewer/conversation-viewer.vala	2015-08-24 13:37:36.314903869 +0200
@@ -690,9 +690,7 @@
         }
         
         if (remote_images) {
-            Geary.Contact contact = current_folder.account.get_contact_store().get_by_rfc822(
-                email.get_primary_originator());
-            bool always_load = contact != null && contact.always_load_remote_images();
+            bool always_load = true;
             
             if (always_load || email.load_remote_images().is_certain()) {
                 show_images_email(div_message, false);
diff -x .git -Naur geary/src/client/folder-list/folder-list-folder-entry.vala geary-elementary/src/client/folder-list/folder-list-folder-entry.vala
--- geary/src/client/folder-list/folder-list-folder-entry.vala	2015-08-24 13:41:04.110469638 +0200
+++ geary-elementary/src/client/folder-list/folder-list-folder-entry.vala	2015-08-24 13:37:36.314903869 +0200
@@ -50,34 +50,34 @@
         
         switch (folder.special_folder_type) {
             case Geary.SpecialFolderType.NONE:
-                return rtl ? "tag-rtl-symbolic" : "tag-symbolic";
+                return rtl ? "tag-rtl" : "tag";
             
             case Geary.SpecialFolderType.INBOX:
-                return "mail-inbox-symbolic";
+                return "mail-inbox";
             
             case Geary.SpecialFolderType.DRAFTS:
-                return "accessories-text-editor-symbolic";
+                return "accessories-text-editor";
             
             case Geary.SpecialFolderType.SENT:
-                return rtl ? "mail-sent-rtl-symbolic" : "mail-sent-symbolic";
+                return rtl ? "mail-sent-rtl" : "mail-sent";
             
             case Geary.SpecialFolderType.FLAGGED:
                 return "starred-symbolic";
             
             case Geary.SpecialFolderType.IMPORTANT:
-                return "task-due-symbolic";
+                return "task-due";
             
             case Geary.SpecialFolderType.ALL_MAIL:
-                return "mail-archive-symbolic";
+                return "mail-archive";
             
             case Geary.SpecialFolderType.SPAM:
-                return rtl ? "mail-spam-rtl-symbolic" : "mail-spam-symbolic";
+                return "edit-flag";
             
             case Geary.SpecialFolderType.TRASH:
-                return "user-trash-symbolic";
+                return "user-trash";
             
             case Geary.SpecialFolderType.OUTBOX:
-                return "mail-outbox-symbolic";
+                return "mail-outbox";
             
             default:
                 assert_not_reached();
diff -x .git -Naur geary/src/client/util/util-gtk.vala geary-elementary/src/client/util/util-gtk.vala
--- geary/src/client/util/util-gtk.vala	2015-08-24 13:39:37.569687732 +0200
+++ geary-elementary/src/client/util/util-gtk.vala	2015-08-24 13:37:36.315903867 +0200
@@ -121,12 +121,6 @@
 }
 
 /**
- * This is not bound in Vala < 0.26.
- */
-[CCode(cname = "g_binding_unbind")]
-extern void unbind(Binding binding);
-
-/**
  * Set xalign property on Gtk.Label in a compatible way.
  *
  * GtkMisc is being deprecated in GTK+ 3 and the "xalign" property has been moved to GtkLabel.  This
diff -x .git -Naur geary/ui/CMakeLists.txt geary-elementary/ui/CMakeLists.txt
--- geary/ui/CMakeLists.txt	2015-08-24 13:39:37.701687439 +0200
+++ geary-elementary/ui/CMakeLists.txt	2015-08-24 13:37:36.316903866 +0200
@@ -15,6 +15,7 @@
 install(FILES password-dialog.glade DESTINATION ${UI_DEST})
 install(FILES preferences.glade DESTINATION ${UI_DEST})
 install(FILES remove_confirm.glade DESTINATION ${UI_DEST})
+install(FILES toolbar_menu.ui DESTINATION ${UI_DEST})
 install(FILES toolbar_empty_menu.ui DESTINATION ${UI_DEST})
 install(FILES toolbar_mark_menu.ui DESTINATION ${UI_DEST})
 install(FILES upgrade_dialog.glade DESTINATION ${UI_DEST})
diff -x .git -Naur geary/ui/toolbar_menu.ui geary-elementary/ui/toolbar_menu.ui
--- geary/ui/toolbar_menu.ui	1970-01-01 01:00:00.000000000 +0100
+++ geary-elementary/ui/toolbar_menu.ui	2015-08-24 13:37:36.316903866 +0200
@@ -0,0 +1,13 @@
+<ui>
+    <popup name="ToolbarMenu">
+        <menuitem name="Accounts" action="GearyAccounts" />
+        <menuitem name="Preferences" action="GearyPreferences" />
+        <separator />
+        <menuitem name="Donate" action="GearyDonate" />
+        <separator />
+        <menuitem name="Help" action="GearyHelp" />
+        <menuitem name="About" action="GearyAbout" />
+        <separator />
+        <menuitem name="Quit" action="GearyQuit" />
+    </popup>
+</ui>
